<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.visa.dao.ProductDao" >
  <select id="selectByCountryIdCount" resultType="java.lang.Integer">
      select count(*) from product
      where countryId = #{countryId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByAreaIdCount" resultType="java.lang.Integer">
      select count(*) from product
      where areaId = #{areaId,jdbcType=INTEGER}
  </select>
    
  <select id="selectAllCount" resultType="java.lang.Integer">
    select count(*) from product 
    where 1=1
    <if test="productName != null">and productName like CONCAT('%',#{productName,jdbcType=VARCHAR},'%')</if>
    <if test="countryId != null and countryId != 0">and countryId = #{countryId,jdbcType=INTEGER}</if>
    <if test="areaId != null and areaId != 0">and areaId = #{areaId,jdbcType=INTEGER}</if>
    <if test="continentId != null and continentId != 0">and continentId = #{continentId,jdbcType=INTEGER}</if>
    order by postDt desc 
  </select>
  
  <select id="selectAll" resultType="ProductVo">
    select product.*,country.countryName,area.areaName from product,country,area 
    where product.areaId=area.areaId and product.countryId=country.countryId
    <if test="product.productName != null">and productName like CONCAT('%',#{product.productName,jdbcType=VARCHAR},'%')</if>
    <if test="product.countryId != null and product.countryId != 0">and product.countryId = #{product.countryId,jdbcType=INTEGER}</if>
    <if test="product.areaId != null and product.areaId != 0">and product.areaId = #{product.areaId,jdbcType=INTEGER}</if>
    <if test="product.continentId != null and product.continentId != 0">and product.continentId = #{product.continentId,jdbcType=INTEGER}</if>
    order by postDt desc
    limit #{start,jdbcType=INTEGER},#{pageCount,jdbcType=INTEGER}
  </select>
  
  <select id="selectAllProduct" resultType="Product">
    select * from product 
  </select>
  
  <select id="selectByPrimaryKey" resultType="Product" parameterType="java.lang.Integer" >
    select 
    *
    from product
    where productId = #{productId,jdbcType=INTEGER}
  </select>
  
  <select id="searchByCountryId" resultType="Product" parameterType="java.lang.String">
    select * from product 
    where countryId = #{countryId,jdbcType=INTEGER}
    order by postDt desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where productId = #{productId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="Product" >
    insert into product (productName, 
      productType, districtPlace, 
      price, des, postDt, areaId, continentId, countryId)
    values (#{productName,jdbcType=VARCHAR},
      #{productType,jdbcType=VARCHAR}, #{districtPlace,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{des,jdbcType=VARCHAR}, now(), 
      #{areaId,jdbcType=DECIMAL}, #{continentId,jdbcType=DECIMAL}, #{countryId,jdbcType=DECIMAL})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="Product" >
    update product
    set productName = #{productName,jdbcType=VARCHAR},
      productType = #{productType,jdbcType=VARCHAR},
      districtPlace = #{districtPlace,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      des = #{des,jdbcType=VARCHAR},
      areaId = #{areaId,jdbcType=DECIMAL},
      continentId = #{continentId,jdbcType=DECIMAL},
      countryId = #{countryId,jdbcType=DECIMAL}
    where productId = #{productId,jdbcType=INTEGER}
  </update>
</mapper>