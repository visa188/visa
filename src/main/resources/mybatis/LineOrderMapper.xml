<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.visa.dao.line.LineOrderDao" >
  <select id="selectAllLineOrder" resultType="LineOrder">
  	select tmp1.*,lineproduct.lineProductName
		from (select lineorder.*,linecountry.countryName lineCountryName
		    from lineorder,linecountry
		    where lineorder.lineCountryId = linecountry.countryId  
		    	and lineorder.orderDate like #{date,jdbcType=VARCHAR}
		    	<if test="salesmanId != null">and lineorder.salesmanId=#{salesmanId,jdbcType=VARCHAR}</if>
    	) tmp1 left OUTER join lineproduct on( tmp1.lineProductId = lineproduct.lineProductId)
  </select>
  
  <select id="selectByPrimaryKey" resultType="LineOrder">
    select 
    *
    from lineorder
    where orderId = #{orderId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByProductIdCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      	select count(*)
		from lineorder
		where lineProductId = #{lineProductId,jdbcType=INTEGER}
	</select>
	
   <select id="selectByProductId" parameterType="java.lang.Integer" resultType="LineOrder">
      	select *
		from lineorder
		where lineProductId = #{lineProductId,jdbcType=INTEGER}
	</select>
	
	<select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
      	select count(*) from 
		(select lineorder.*,linecountry.countryName lineCountryName
		    from lineorder,linecountry
		    where lineorder.lineCountryId = linecountry.countryId  
		<if test="salesmanId != null">and lineorder.salesmanId=#{salesmanId,jdbcType=VARCHAR}</if>
		<if test="lineOperatorId != null">and lineorder.lineOperatorId=#{lineOperatorId,jdbcType=VARCHAR}</if>
		<if test="visaOperatorId != null">and lineorder.visaOperatorId=#{visaOperatorId,jdbcType=VARCHAR}</if>
		<if test="signOperatorId != null">and lineorder.signOperatorId=#{signOperatorId,jdbcType=VARCHAR}</if>
		<if test="managerId != null">and ${role} in (select userId from user where managerId=#{managerId,jdbcType=VARCHAR})</if>
		<if test="orderSeq != null">and lineorder.orderSeq=#{orderSeq,jdbcType=VARCHAR}</if>
		<if test="startDate != null">
		  	and lineorder.orderDate >= #{startDate,jdbcType=VARCHAR}
		  </if>
		  <if test="endDate != null">
		  	<![CDATA[
			and lineorder.orderDate <= #{endDate,jdbcType=VARCHAR}
			]]>
		  </if>) tmp1 left OUTER join lineproduct on( tmp1.lineProductId = lineproduct.lineProductId)
	</select>
	
	<select id="selectByPage" parameterType="java.util.Map" resultType="LineOrder">
       	select tmp1.*,lineproduct.lineProductName
		from (select lineorder.*,linecountry.countryName lineCountryName
		    from lineorder,linecountry
		    where lineorder.lineCountryId = linecountry.countryId  
			<if test="salesmanId != null">and lineorder.salesmanId=#{salesmanId,jdbcType=VARCHAR}</if>
			<if test="lineOperatorId != null">and lineorder.lineOperatorId=#{lineOperatorId,jdbcType=VARCHAR}</if>
			<if test="visaOperatorId != null">and lineorder.visaOperatorId=#{visaOperatorId,jdbcType=VARCHAR}</if>
			<if test="signOperatorId != null">and lineorder.signOperatorId=#{signOperatorId,jdbcType=VARCHAR}</if>
			<if test="managerId != null">and ${role} in (select userId from user where managerId=#{managerId,jdbcType=VARCHAR})</if>
			<if test="orderSeq != null">and lineorder.orderSeq=#{orderSeq,jdbcType=VARCHAR}</if>
			<if test="startDate != null">
			  	and lineorder.orderDate >= #{startDate,jdbcType=VARCHAR}
			  </if>
			  <if test="endDate != null">
			  	<![CDATA[
				and lineorder.orderDate <= #{endDate,jdbcType=VARCHAR}
				]]>
			  </if>)
		 tmp1 left OUTER join lineproduct on( tmp1.lineProductId = lineproduct.lineProductId)
		order by orderDate desc,orderId desc
		limit #{begin,jdbcType=INTEGER},#{pageCount,jdbcType=INTEGER}
	</select>
	
	<select id="selectOrderYears" resultType="java.lang.String" >
    select distinct YEAR(orderDate) from lineorder where orderDate is not null order by orderDate
  </select>
  
  <select id="selectOrderMonths" resultType="java.lang.String" >
    select distinct MONTH(orderDate) from lineorder where orderDate is not null order by orderDate
  </select>
  
  <delete id="deleteByPrimaryKey">
    delete from lineorder
    where orderId = #{orderId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="orderId">
    insert into lineorder (orderDate,type,nameListSize,salesmanId,salesmanName,lineOperatorId,lineOperatorName,
    visaOperatorId,visaOperatorName,signOperatorId,signOperatorName,travelAgency,contact,contactNo,lineCountryId,
    startDate,endDate,travelInfo,travelInfoFileUrl,aircorpId,price,priceSum,alreadyGot,needGot,gotBank,gotDate,paidPriceSum,status,lineProductId,specialComment,orderSeq,profit, postTime)
    values (now(),
    #{type,jdbcType=INTEGER},#{nameListSize,jdbcType=INTEGER},#{salesmanId,jdbcType=VARCHAR},#{salesmanName,jdbcType=VARCHAR},
    #{lineOperatorId,jdbcType=VARCHAR},#{lineOperatorName,jdbcType=VARCHAR},#{visaOperatorId,jdbcType=VARCHAR},#{visaOperatorName,jdbcType=VARCHAR},
    #{signOperatorId,jdbcType=VARCHAR},#{signOperatorName,jdbcType=VARCHAR},#{travelAgency,jdbcType=VARCHAR},#{contact,jdbcType=VARCHAR},
    #{contactNo,jdbcType=VARCHAR},#{lineCountryId,jdbcType=INTEGER},#{startDate,jdbcType=DATE},
    #{endDate,jdbcType=DATE},#{travelInfo,jdbcType=VARCHAR},#{travelInfoFileUrl,jdbcType=VARCHAR},#{aircorpId,jdbcType=INTEGER},
    #{price,jdbcType=DECIMAL},#{priceSum,jdbcType=DECIMAL},#{alreadyGot,jdbcType=DECIMAL},#{needGot,jdbcType=DECIMAL},#{gotBank,jdbcType=VARCHAR},#{gotDate,jdbcType=DATE},
    #{priceSum,jdbcType=DECIMAL},#{status,jdbcType=INTEGER},#{lineProductId,jdbcType=INTEGER},#{specialComment,jdbcType=VARCHAR},
    #{orderSeq,jdbcType=VARCHAR},#{profit,jdbcType=DECIMAL}, now())
  </insert>
  
  <update id="updateByPrimaryKey">
    update lineorder
    <set>
		<if test="type != null">type = #{type,jdbcType=INTEGER},</if>
	    <if test="nameListSize != null">nameListSize = #{nameListSize,jdbcType=INTEGER},</if>
	    <if test="salesmanName != null">salesmanName = #{salesmanName,jdbcType=VARCHAR},</if>
	    <if test="lineOperatorId != null">lineOperatorId = #{lineOperatorId,jdbcType=VARCHAR},</if>
	    <if test="lineOperatorName != null">lineOperatorName = #{lineOperatorName,jdbcType=VARCHAR},</if>
	    <if test="visaOperatorId != null">visaOperatorId = #{visaOperatorId,jdbcType=VARCHAR},</if>
	    <if test="visaOperatorName != null">visaOperatorName = #{visaOperatorName,jdbcType=VARCHAR},</if>
	    <if test="signOperatorId != null">signOperatorId = #{signOperatorId,jdbcType=VARCHAR},</if>
	    <if test="signOperatorName != null">signOperatorName = #{signOperatorName,jdbcType=VARCHAR},</if>
	    <if test="travelAgency != null">travelAgency = #{travelAgency,jdbcType=VARCHAR},</if>
	    <if test="contact != null">contact = #{contact,jdbcType=VARCHAR},</if>
	    <if test="contactNo != null">contactNo = #{contactNo,jdbcType=VARCHAR},</if>
	    <if test="lineCountryId != null">lineCountryId = #{lineCountryId,jdbcType=INTEGER},</if>
	    <if test="startDate != null">startDate = #{startDate,jdbcType=DATE},</if>
	    <if test="endDate != null">endDate = #{endDate,jdbcType=DATE},</if>
	    <if test="travelInfo != null">travelInfo = #{travelInfo,jdbcType=VARCHAR},</if>
	    <if test="travelInfoFileUrl != null">travelInfoFileUrl = #{travelInfoFileUrl,jdbcType=VARCHAR},</if>
	    <if test="aircorpId != null">aircorpId = #{aircorpId,jdbcType=INTEGER},</if>
	    <if test="price != null">price = #{price,jdbcType=DECIMAL},</if>
	    <if test="priceSum != null">priceSum = #{priceSum,jdbcType=DECIMAL},</if>
	    <if test="alreadyGot != null">alreadyGot = #{alreadyGot,jdbcType=DECIMAL},</if>
	    <if test="needGot != null">needGot = #{needGot,jdbcType=DECIMAL},</if>
	    <if test="gotBank != null">gotBank = #{gotBank,jdbcType=VARCHAR},</if>
	    <if test="gotDate != null">gotDate = #{gotDate,jdbcType=DATE},</if>
	    <if test="paidPriceSum != null">paidPriceSum = #{paidPriceSum,jdbcType=DECIMAL},</if>
	    <if test="status != null">status = #{status,jdbcType=INTEGER},</if>
	    <if test="lineProductId != null">lineProductId = #{lineProductId,jdbcType=INTEGER},</if>
	    <if test="profit != null">profit = #{profit,jdbcType=DECIMAL},</if>
	    <if test="specialComment != null">specialComment = #{specialComment,jdbcType=VARCHAR},</if>
    postTime = now()
    </set>
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>
