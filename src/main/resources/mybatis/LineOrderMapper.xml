<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.visa.dao.line.LineOrderDao" >
  <select id="selectAllLineOrder" resultType="LineOrder">
  	select tmp1.*,lineproduct.lineProductName
		from (select lineorder.*,linecountry.countryName lineCountryName
		    from lineorder,linecountry
		    where lineorder.lineCountryId = linecountry.countryId  
		    	and lineorder.orderDate like #{date,jdbcType=VARCHAR}
		    	<if test="salesmanId != null">and lineorder.salesmanId=#{salesmanId,jdbcType=VARCHAR}</if>
    	) tmp1 left OUTER join lineproduct on( tmp1.lineProductId = lineproduct.lineProductId)
  </select>
  
  <select id="selectByPrimaryKey" resultType="LineOrder">
    select 
    *
    from lineorder
    where orderId = #{orderId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByProductIdCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      	select count(*)
		from lineorder
		where lineProductId = #{lineProductId,jdbcType=INTEGER}
	</select>
	
   <select id="selectByProductId" parameterType="java.lang.Integer" resultType="LineOrder">
      	select *
		from lineorder
		where lineProductId = #{lineProductId,jdbcType=INTEGER}
	</select>
	
	<select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
      	select count(*) from 
		(select lineorder.*,linecountry.countryName lineCountryName
		    from lineorder,linecountry
		    where lineorder.lineCountryId = linecountry.countryId  
	    <if test="userRoleId == 81">and (lineorder.status!=7 AND lineorder.status!=71)</if> 
	    <if test="userRoleId == 101">and (lineorder.status=10 or lineorder.status=9 or lineorder.status=91)</if>
	    <if test="userRoleId == 12"><![CDATA[and (lineorder.status= -11 or lineorder.status= -1)]]></if> 
		<if test="type != null">and lineorder.type=#{type,jdbcType=INTEGER}</if>
		<if test="salesmanId != null">and lineorder.salesmanId=#{salesmanId,jdbcType=VARCHAR}</if>
		<if test="lineOperatorId != null">and lineorder.lineOperatorId=#{lineOperatorId,jdbcType=VARCHAR}</if>
		<if test="visaOperatorId != null">and lineorder.visaOperatorId=#{visaOperatorId,jdbcType=VARCHAR}</if>
		<if test="signOperatorId != null">and lineorder.signOperatorId=#{signOperatorId,jdbcType=VARCHAR}</if>
		<if test="managerId != null">and ${role} in (select userId from user where managerId=#{managerId,jdbcType=VARCHAR})</if>
		<if test="orderSeq != null">and lineorder.orderSeq=#{orderSeq,jdbcType=VARCHAR}</if>
		<if test="alarmOrders != null">
				and DATE_ADD(now(),INTERVAL 2 DAY) > lineorder.nameListlimitDate
				and nameListState != 1
				and nameListState != 2
			</if>
		<if test="startDate != null">
		  	and date_format(lineorder.orderDate ,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
		  </if>
		  <if test="endDate != null">
		  	<![CDATA[
			and date_format(lineorder.orderDate ,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR}
			]]>
		  </if>
		  <if test="serviceOperatorId != null">
			  UNION
			  select lineorder.*,linecountry.countryName lineCountryName
			    from lineorder,linecountry,linessrvice service
			    where lineorder.lineCountryId = linecountry.countryId  and  service.orderId = lineorder.orderId 
			    and (#{serviceOperatorId,jdbcType=VARCHAR} =  service.serviceOperator )
			    <if test="type != null">and lineorder.type=#{type,jdbcType=INTEGER}</if>
				<if test="orderSeq != null">and lineorder.orderSeq=#{orderSeq,jdbcType=VARCHAR}</if>
				<if test="startDate != null">
				  	and date_format(lineorder.orderDate ,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
				  </if>
				  <if test="endDate != null">
				  	<![CDATA[
					and date_format(lineorder.orderDate ,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR}
					]]>
				  </if>
		   </if>
		  ) tmp1 left OUTER join lineproduct on( tmp1.lineProductId = lineproduct.lineProductId)
	</select>
	
	<select id="selectByPage" parameterType="java.util.Map" resultType="LineOrder">
       	select tmp1.*,lineproduct.lineProductName,lineproduct.orderSeq as lineProductOrderSeq, lineproduct.groupLeader,lineproduct.aircorpId,
       	lineproduct.depositLimitDate,lineproduct.printTicketLimitDate
		from (
			select lineorder.*,linecountry.countryName lineCountryName
		    from lineorder,linecountry
		    where lineorder.lineCountryId = linecountry.countryId  
		    <if test="userRoleId == 81">and (lineorder.status!=7 AND lineorder.status!=71)</if> 
		    <if test="userRoleId == 101">and (lineorder.status=10 or lineorder.status==9 or lineorder.status=91)</if>
		    <if test="userRoleId == 12"><![CDATA[and (lineorder.status= -11 or lineorder.status= -1)]]></if> 
		    <if test="type != null">and lineorder.type=#{type,jdbcType=INTEGER}</if>
			<if test="salesmanId != null">and lineorder.salesmanId=#{salesmanId,jdbcType=VARCHAR}</if>
			<if test="lineOperatorId != null">and lineorder.lineOperatorId=#{lineOperatorId,jdbcType=VARCHAR}</if>
			<if test="visaOperatorId != null">and lineorder.visaOperatorId=#{visaOperatorId,jdbcType=VARCHAR}</if>
			<if test="signOperatorId != null">and lineorder.signOperatorId=#{signOperatorId,jdbcType=VARCHAR}</if>
			<if test="managerId != null">and ${role} in (select userId from user where managerId=#{managerId,jdbcType=VARCHAR})</if>
			<if test="orderSeq != null">and lineorder.orderSeq=#{orderSeq,jdbcType=VARCHAR}</if>
			<if test="alarmOrders != null">
				and DATE_ADD(now(),INTERVAL 2 DAY) > lineorder.nameListlimitDate
				and nameListState != 1
				and nameListState != 2
			</if>
			<if test="startDate != null">
			  	and date_format(lineorder.orderDate ,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
			  </if>
			  <if test="endDate != null">
			  	<![CDATA[
				and date_format(lineorder.orderDate ,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR}
				]]>
			  </if>
			  <if test="serviceOperatorId != null">
				  UNION
				  select lineorder.*,linecountry.countryName lineCountryName
				    from lineorder,linecountry,linessrvice service
				    where lineorder.lineCountryId = linecountry.countryId  and  service.orderId = lineorder.orderId 
				    and (#{serviceOperatorId,jdbcType=VARCHAR} =  service.serviceOperator )
				    <if test="type != null">and lineorder.type=#{type,jdbcType=INTEGER}</if>
					<if test="orderSeq != null">and lineorder.orderSeq=#{orderSeq,jdbcType=VARCHAR}</if>
					<if test="startDate != null">
					  	and date_format(lineorder.orderDate ,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
					  </if>
					  <if test="endDate != null">
					  	<![CDATA[
						and date_format(lineorder.orderDate ,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR}
						]]>
					  </if>
			   </if>
			  )
		 tmp1 left OUTER join lineproduct on( tmp1.lineProductId = lineproduct.lineProductId)
		order by orderDate desc,orderId desc
		limit #{begin,jdbcType=INTEGER},#{pageCount,jdbcType=INTEGER}
	</select>
	
	<select id="countAlarmOrders" resultType="java.lang.Integer">
		select count(*)
		    from lineorder,linecountry
		    where lineorder.lineCountryId = linecountry.countryId  
		    	and DATE_ADD(now(),INTERVAL 2 DAY) > lineorder.nameListlimitDate
				and nameListState != 1
				and nameListState != 2
	</select>
	
	<select id="selectOrderYears" resultType="java.lang.String" >
    select distinct YEAR(orderDate) from lineorder where orderDate is not null order by orderDate
  </select>
  
  <select id="selectOrderMonths" resultType="java.lang.String" >
    select distinct MONTH(orderDate) from lineorder where orderDate is not null order by orderDate
  </select>
  
  <delete id="deleteByPrimaryKey">
    delete from lineorder
    where orderId = #{orderId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="orderId">
    insert into lineorder (orderDate,type,nameListSize,nameListType,nameListState,nameListlimitDate,srf,drf,pf,salesmanId,salesmanName,lineOperatorId,lineOperatorName,
    visaOperatorId,visaOperatorName,signOperatorId,signOperatorName,customerId,lineCountryId,
    startDate,endDate,travelInfo,travelInfoFileUrl,aircorpId,price,priceSum,alreadyGot,needGot,gotBank,gotDate,paidPriceSum,status,lineProductId,specialComment,orderSeq,profit,qtys, postTime,
    dyczb,deczb,jdstatus,busstatus,tuanstatus,yshkStatus,yfhkStatus)
    values (now(),
    #{type,jdbcType=INTEGER},#{nameListSize,jdbcType=INTEGER},#{nameListType,jdbcType=INTEGER},#{nameListState,jdbcType=INTEGER},#{nameListlimitDate,jdbcType=DATE},
    #{srf,jdbcType=VARCHAR},#{drf,jdbcType=VARCHAR},#{pf,jdbcType=VARCHAR},
    #{salesmanId,jdbcType=VARCHAR},#{salesmanName,jdbcType=VARCHAR},
    #{lineOperatorId,jdbcType=VARCHAR},#{lineOperatorName,jdbcType=VARCHAR},#{visaOperatorId,jdbcType=VARCHAR},#{visaOperatorName,jdbcType=VARCHAR},
    #{signOperatorId,jdbcType=VARCHAR},#{signOperatorName,jdbcType=VARCHAR},#{customerId,jdbcType=INTEGER},#{lineCountryId,jdbcType=INTEGER},#{startDate,jdbcType=DATE},
    #{endDate,jdbcType=DATE},#{travelInfo,jdbcType=VARCHAR},#{travelInfoFileUrl,jdbcType=VARCHAR},#{aircorpId,jdbcType=INTEGER},
    #{price,jdbcType=DECIMAL},#{priceSum,jdbcType=DECIMAL},#{alreadyGot,jdbcType=DECIMAL},#{needGot,jdbcType=DECIMAL},#{gotBank,jdbcType=VARCHAR},#{gotDate,jdbcType=DATE},
    #{priceSum,jdbcType=DECIMAL},#{status,jdbcType=INTEGER},#{lineProductId,jdbcType=INTEGER},#{specialComment,jdbcType=VARCHAR},
    #{orderSeq,jdbcType=VARCHAR},#{profit,jdbcType=DECIMAL},#{qtys,jdbcType=DECIMAL}, now(),#{dyczb,jdbcType=VARCHAR},#{deczb,jdbcType=VARCHAR},
    #{jdstatus,jdbcType=INTEGER},#{busstatus,jdbcType=INTEGER},#{tuanstatus,jdbcType=INTEGER},#{yshkStatus,jdbcType=INTEGER},#{yfhkStatus,jdbcType=INTEGER})
  </insert>
  
  <update id="updateByPrimaryKey">
    update lineorder
    <set>
		<if test="type != null">type = #{type,jdbcType=INTEGER},</if>
	    <if test="nameListSize != null">nameListSize = #{nameListSize,jdbcType=INTEGER},</if>
	    <if test="nameListType != null">nameListType = #{nameListType,jdbcType=INTEGER},</if>
	    <if test="nameListState != null">nameListState = #{nameListState,jdbcType=INTEGER},</if>
	    <if test="nameListlimitDate != null">nameListlimitDate = #{nameListlimitDate,jdbcType=DATE},</if>
	    <if test="srf != null">srf = #{srf,jdbcType=VARCHAR},</if>
	    <if test="drf != null">drf = #{drf,jdbcType=VARCHAR},</if>
	    <if test="pf != null">pf = #{pf,jdbcType=VARCHAR},</if>
	    <if test="salesmanName != null">salesmanName = #{salesmanName,jdbcType=VARCHAR},</if>
	    <if test="lineOperatorId != null">lineOperatorId = #{lineOperatorId,jdbcType=VARCHAR},</if>
	    <if test="lineOperatorName != null">lineOperatorName = #{lineOperatorName,jdbcType=VARCHAR},</if>
	    <if test="visaOperatorId != null">visaOperatorId = #{visaOperatorId,jdbcType=VARCHAR},</if>
	    <if test="visaOperatorName != null">visaOperatorName = #{visaOperatorName,jdbcType=VARCHAR},</if>
	    <if test="signOperatorId != null">signOperatorId = #{signOperatorId,jdbcType=VARCHAR},</if>
	    <if test="signOperatorName != null">signOperatorName = #{signOperatorName,jdbcType=VARCHAR},</if>
	    <if test="customerId != null">customerId = #{customerId,jdbcType=INTEGER},</if>
	    <if test="lineCountryId != null">lineCountryId = #{lineCountryId,jdbcType=INTEGER},</if>
	    <if test="startDate != null">startDate = #{startDate,jdbcType=DATE},</if>
	    <if test="endDate != null">endDate = #{endDate,jdbcType=DATE},</if>
	    <if test="travelInfo != null">travelInfo = #{travelInfo,jdbcType=VARCHAR},</if>
	    <if test="travelInfoFileUrl != null">travelInfoFileUrl = #{travelInfoFileUrl,jdbcType=VARCHAR},</if>
	    <if test="aircorpId != null">aircorpId = #{aircorpId,jdbcType=INTEGER},</if>
	    <if test="price != null">price = #{price,jdbcType=DECIMAL},</if>
	    <if test="priceSum != null">priceSum = #{priceSum,jdbcType=DECIMAL},</if>
	    <if test="alreadyGot != null">alreadyGot = #{alreadyGot,jdbcType=DECIMAL},</if>
	    <if test="needGot != null">needGot = #{needGot,jdbcType=DECIMAL},</if>
	    <if test="gotBank != null">gotBank = #{gotBank,jdbcType=VARCHAR},</if>
	    <if test="gotDate != null">gotDate = #{gotDate,jdbcType=DATE},</if>
	    <if test="paidPriceSum != null">paidPriceSum = #{paidPriceSum,jdbcType=DECIMAL},</if>
	    <if test="status != null">status = #{status,jdbcType=INTEGER},</if>
	    <if test="lineProductId != null">lineProductId = #{lineProductId,jdbcType=INTEGER},</if>
	    <if test="profit != null">profit = #{profit,jdbcType=DECIMAL},</if>
	    <if test="qtys != null">qtys = #{qtys,jdbcType=DECIMAL},</if>
	    <if test="specialComment != null">specialComment = #{specialComment,jdbcType=VARCHAR},</if>
	    <if test="dyczb != null">dyczb = #{dyczb,jdbcType=VARCHAR},</if>
	    <if test="deczb != null">deczb = #{deczb,jdbcType=VARCHAR},</if>
	    <if test="jdstatus != null">jdstatus = #{jdstatus,jdbcType=INTEGER},</if>
	    <if test="busstatus != null">busstatus = #{busstatus,jdbcType=INTEGER},</if>
	    <if test="tuanstatus != null">tuanstatus = #{tuanstatus,jdbcType=INTEGER},</if>
	    <if test="yshkStatus != null">yshkStatus = #{yshkStatus,jdbcType=INTEGER},</if>
	    <if test="yfhkStatus != null">yfhkStatus = #{yfhkStatus,jdbcType=INTEGER},</if>
    postTime = now()
    </set>
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>
